set -g status-bg black
set -g status-fg white
# tmux < v2.1:
if-shell "tmux -V | awk '{exit !($2 < \"2.1\")}'" \
  "set-window-option -g mode-mouse on; \
  set -g mouse-select-pane on; \
  set -g mouse-resize-pane on; \
  set -g mouse-select-window on; \
  set-window-option -g window-status-current-fg cyan"
# tmux >= v2.1:
if-shell "tmux -V | awk '{exit !($2 >= \"2.1\")}'" \
  "set -g mouse on; \
  set-window-option -g window-status-current-style fg=cyan"

set -g default-terminal "xterm-256color"
set -g visual-activity on
set -g focus-events on
# prefix key
unbind ^b
set -g prefix M-m
bind M-m   send-prefix
bind Enter source-file ~/.tmux.conf \; display "leatchina's tmux config reloaded!"
# time
set -g escape-time 50 # in vim , ttimeoutlen is 60
set -g display-time 2500
set -g display-panes-time 2000
set -g history-limit 65535
set -g base-index 1
set -g pane-base-index 1

# workspace
unbind Space
bind -n M-] split-window -h -c '#{pane_current_path}'
bind -n M-[ split-window -c '#{pane_current_path}'
bind M-]    split-window -h -c '#{home_path}'
bind M-[    split-window -c '#{home_path}'

# pane
## select pane
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-H if-shell "$is_vim" "send-keys M-H" "select-pane -L"
bind-key -n M-J if-shell "$is_vim" "send-keys M-J" "select-pane -D"
bind-key -n M-K if-shell "$is_vim" "send-keys M-K" "select-pane -U"
bind-key -n M-L if-shell "$is_vim" "send-keys M-L" "select-pane -R"
## swap pane
bind M-p swapp -U
bind M-n swapp -D
## resize pane
bind h resizep -L 8
bind j resizep -D 5
bind k resizep -U 5
bind l resizep -R 8
bind M-h resizep -L 16
bind M-j resizep -D 10
bind M-k resizep -U 10
bind M-l resizep -R 16
## select the last pane
unbind e
bind r lastp
## kill pane
unbind x
bind q killp
bind-key -n M-I killp

# window
## new window
unbind ^e
unbind c
unbind t
bind t new-window
bind-key -n M-i new-window
## switch windows & move windows
bind-key -n M-p previous-window
bind-key -n M-n next-window
bind-key -n M-P swap-window -t -1
bind-key -n M-N swap-window -t +1
## select the last window
bind M-r last
## kill window
bind M-q killw

# rename
unbind ,
unbind .
bind-key M-s command-prompt 'rename-session %%'
bind-key M-w command-prompt 'rename-window  %%'
# Move
bind-key M-t command-prompt 'move-window -t %%'


# app
## htop
bind _ splitw htop
bind | splitw -h htop
## man
bind m command-prompt "splitw 'exec man %%'"

#############################################################
# show session name, window & pane number, date and time on right side of
set -g status-left-length 30
set -g status-left "#[fg=yellow]#S"
set -g status-right-length 60
set -g status-right "#[fg=red] W#I:P#P #[fg=blue]| %Y-%b-%d #[fg=white]| %k:%M "
set -g status-interval 1
set -g status-justify centre

# modes
set-window-option -g clock-mode-colour colour223
set-window-option -g automatic-rename off
set-window-option -g window-status-current-format "#I:#W#F"

#############################################################
# copy mode
set-window-option -g mode-keys vi      # Vi风格选择文本
bind-key -n M-O copy-mode \; display "start copy mode, use space or v to select, y to copy, r to toggle-selection"
bind-key -n M-y copy-mode \; send -X begin-selection 
bind-key -n M-\\ paste-buffer
bind-key -n M-\| list-buffers 
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
